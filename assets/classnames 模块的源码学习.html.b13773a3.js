import{_ as n,b as s}from"./app.69c6fa1a.js";const a={},p=s(`<h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>\u65E5\u5E38\u5728\u4F7F\u7528 <code>react</code> \u8FDB\u884C\u5F00\u53D1\u65F6\uFF0C\u5927\u591A\u6570\u4EBA\u90FD\u4F1A\u4F7F\u7528 <a href="&#39;xx&#39;"><code>classnames</code></a> \u8FD9\u4E2A\u5E93\u5E2E\u52A9\u6211\u4EEC\u5224\u65AD\u3001\u62FC\u63A5 <code>className</code>\u3002 \u5982\u679C\u6CA1\u6709 <code>classnames</code> \uFF0C\u5728\u62FC\u63A5\u7EC4\u4EF6\u7684 <code>className</code> \u65F6\u53EF\u80FD\u662F\u8FD9\u6837\u5B50\u7684\uFF1A</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> isActive <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> className <span class="token operator">=</span> isActive <span class="token operator">?</span> <span class="token string">&#39;btn active&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;btn&#39;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click Me!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u9762\u4E3E\u4F8B\u7684\u5224\u65AD\u6761\u4EF6\u7B97\u662F\u6BD4\u8F83\u7B80\u5355\u7684\u4E86\uFF0C\u5982\u679C\u5224\u65AD\u6761\u4EF6\u548C\u9700\u8981\u62FC\u63A5\u7684\u7C7B\u540D\u5F88\u591A\uFF0C\u8FD8\u8FD9\u6837\u624B\u52A8\u62FC\u63A5\u7C7B\u540D\u5C31\u5F88\u75DB\u82E6\u4E86\u3002</p><p>\u5982\u679C\u4F7F\u7528 <code>classnames</code> \u7684\u8BDD\u5C31\u65B9\u4FBF\u591A\u4E86\uFF01\u{1F604}</p><div class="language-jsx ext-jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> classnames <span class="token keyword">from</span> <span class="token string">&#39;classnames&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Button</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> isActive <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> className <span class="token operator">=</span> <span class="token function">classnames</span><span class="token punctuation">(</span><span class="token string">&#39;btn&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">active</span><span class="token operator">:</span> isActive<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Click Me!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6E90\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u6E90\u7801\u5B9E\u73B0</h2><p>\u4E0B\u9762\u8BA9\u6211\u4EEC\u6765\u770B\u770B <code>classnames</code> \u5185\u90E8\u662F\u600E\u4E48\u5B9E\u73B0\u7684\u3002</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// https://github.com/JedWatson/classnames/blob/master/index.js</span>

<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token string">&#39;use strict&#39;</span>
  <span class="token comment">// \u5224\u65AD\u5BF9\u8C61\u662F\u5426\u62E5\u6709\u67D0\u4E2A\u6210\u5458</span>
  <span class="token keyword">var</span> hasOwn <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span>hasOwnProperty

  <span class="token keyword">function</span> <span class="token function">classNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BE5\u6570\u7EC4\u7528\u6237\u5B58\u50A8\u6BCF\u4E00\u4E2A\u7C7B\u540D</span>
    <span class="token keyword">var</span> classes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u904D\u5386 arguments</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u83B7\u53D6\u8C03\u7528 classNames \u65B9\u6CD5\u65F6\u4F20\u5165\u7684\u6BCF\u4E00\u4E2A\u5B9E\u53C2</span>
      <span class="token keyword">var</span> arg <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token comment">// \u5F53\u5B9E\u53C2\u7C7B\u578B\u4E3A falsy (e.g, false, 0, null, undefined, NaN, ...)\uFF0C\u8DF3\u8FC7\u672C\u6B21\u5FAA\u73AF</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arg<span class="token punctuation">)</span> <span class="token keyword">continue</span>
      <span class="token comment">// \u5B9E\u53C2\u7C7B\u578B</span>
      <span class="token keyword">var</span> argType <span class="token operator">=</span> <span class="token keyword">typeof</span> arg
      <span class="token comment">// \u5982\u679C\u662F\u5B57\u7B26\u4E32\u6216\u6570\u5B57\uFF0C\u76F4\u63A5\u5C06\u53C2\u6570\u8FFD\u52A0\u5230 classes \u4E2D</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>argType <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> argType <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        classes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5982\u679C\u662F\u53C2\u6570\u7C7B\u578B\u662F\u6570\u7EC4\uFF0C\u4E14\u6570\u7EC4\u957F\u5EA6\u4E0D\u4E3A 0\uFF0C\u8C03\u7528 classNames \u81EA\u8EAB</span>
          <span class="token keyword">var</span> inner <span class="token operator">=</span> <span class="token function">classNames</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span>
          <span class="token comment">// \u5982\u679C\u8FD4\u56DE\u957F\u5EA6\u4E0D\u4E3A 0 \u7684\u5B57\u7B26\u4E32\uFF0C\u5C06\u5B57\u7B26\u4E32\u8FFD\u52A0\u5230 classes \u4E2D</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>inner<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            classes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>inner<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>argType <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5B9E\u53C2\u662F\u5BF9\u8C61\uFF0C\u4E14 arg.toString \u65B9\u6CD5\u548C Object.prototype.toString \u6307\u5411\u540C\u4E00\u4E2A\u5F15\u7528\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span>toString <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u8BE5\u952E\u7684\u503C\u4E3A truthy\uFF0C\u5C06\u503C\u8FFD\u52A0\u5230 classes \u4E2D</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasOwn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> arg<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              classes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u4E3A\u4EC0\u4E48\u8FD9\u91CC\u8981\u5BF9\u81EA\u5B9A\u4E49\u7684 toString \u65B9\u6CD5\u7279\u6B8A\u5904\u7406\uFF0C\u89C1\u4E0B\u65B9\u7684 issue</span>
          <span class="token comment">// https://github.com/Semantic-Org/Semantic-UI-React/issues/2599</span>
          classes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6700\u540E\uFF0C\u5C06 classes \u7684\u6BCF\u4E00\u9879\u4EE5\u7A7A\u683C\u62FC\u63A5\u5F97\u5230\u5B57\u7B26\u4E32\uFF08e.g, [a, b, c] =&gt; &quot;a b c&quot;\uFF09</span>
    <span class="token keyword">return</span> classes<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u652F\u6301 cjs \u6A21\u5F0F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> module <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    classNames<span class="token punctuation">.</span>default <span class="token operator">=</span> classNames
    module<span class="token punctuation">.</span>exports <span class="token operator">=</span> classNames
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token comment">// \u652F\u6301 AMD \u6A21\u5F0F</span>
    <span class="token keyword">typeof</span> define <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">&amp;&amp;</span>
    <span class="token keyword">typeof</span> define<span class="token punctuation">.</span>amd <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span>
    define<span class="token punctuation">.</span>amd
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// register as &#39;classnames&#39;, consistent with npm package name</span>
    <span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;classnames&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> classNames
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u652F\u6301\u6D4F\u89C8\u5668\u73AF\u5883</span>
    window<span class="token punctuation">.</span>classNames <span class="token operator">=</span> classNames
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6700\u540E" tabindex="-1"><a class="header-anchor" href="#\u6700\u540E" aria-hidden="true">#</a> \u6700\u540E</h2><p>\u4E0D\u5C11\u4EBA\u4F1A\u5728\u9879\u76EE\u4E2D\u81EA\u5DF1\u5199\u4E00\u4E2A\u65B9\u6CD5\u7528\u4E8E\u62FC\u63A5\u5B57\u7B26\u4E32\u3002\u4E2A\u4EBA\u89C9\u5F97\u6709\u73B0\u6210\u7684\u8F6E\u5B50\u5C31\u6CA1\u5FC5\u8981\u518D\u81EA\u5DF1\u9020\u8F6E\u5B50\u4E86\uFF0C\u66F4\u4F55\u51B5\u662F <code>classnames</code> \u8FD9\u79CD\u7528 API \u53CB\u597D\u3001\u5355\u6D4B\u8986\u76D6\u7387\u9AD8\u8FBE 100% \u7684\u9AD8\u8D28\u91CF\u7B2C\u4E09\u65B9\u5E93\u5462\u3002</p>`,11);function t(o,c){return p}var l=n(a,[["render",t],["__file","classnames \u6A21\u5757\u7684\u6E90\u7801\u5B66\u4E60.html.vue"]]);export{l as default};
